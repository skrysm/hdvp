# For reference, see: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: CI

# Run this workflow every time a new commit pushed to your repository
# See: https://docs.github.com/en/actions/reference/events-that-trigger-workflows
# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#on
on:
  # Trigger the workflow on push or pull request, but only for the main branch.
  # Reason: Until a feature branch is converted into a pull request, there's no (real) need
  #   to have this workflow waste resources and trigger 'workflow did not work' emails.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  build-and-test:
    # Name the Job
    name: Build code base and run tests
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      # See: https://github.com/actions/checkout
      - name: Get code
        uses: actions/checkout@v2
        with:
          lfs: true
          submodules: true

      # See: https://github.com/actions/setup-dotnet
      - name: Setup .NET build environment
        uses: actions/setup-dotnet@v1
        with:
          # NOTE: Apparently only the 3rd component can be "x"; i.e. "5.x" is not supported.
          dotnet-version: '5.0.x'

      - name: Install NuGet dependencies
        run: dotnet restore

      - name: Build main solution
        # See: https://docs.microsoft.com/de-de/dotnet/core/tools/dotnet-build
        # NOTE: Without specifying a solution file, "dotnet build" searches for a .sln file in the current directory.
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        # See: https://docs.microsoft.com/de-de/dotnet/core/tools/dotnet-test
        # NOTE: Without specifying a solution file, "dotnet test" searches for a .sln file in the current directory.
        run: dotnet test --configuration Release --no-restore --no-build --nologo
